---
import ThemeToggle from '@/components/ThemeToggle.astro'
import { Image } from 'astro:assets'
import Logo from '../../public/favicon.svg'
import type { Session } from '@auth/core/types'
import { Auth, SignIn, SignOut } from 'auth-astro/components'
import { getSession } from 'auth-astro/server'
import {
  Astronav,
  MenuItems,
  MenuIcon,
  Dropdown,
  DropdownItems,
  DropdownSubmenu,
} from 'astro-navbar'

let session = await getSession(Astro.request)
---

<script is:inline>
    const theme = (() => {
      if (
        typeof localStorage !== 'undefined' &&
        localStorage.getItem('theme')
      ) {
        return localStorage.getItem('theme')
      }
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return 'dark'
      }
      return 'light'
    })()

    if (theme === 'light') {
      document.documentElement.classList.remove('dark')
    } else {
      document.documentElement.classList.add('dark')
    }
    
    window.localStorage.setItem('theme', theme)
</script>

<header
  class="mx-auto w-full justify-between gap-5 border-b bg-background p-5 lg:flex"
>
  <Astronav>
    <div class="flex w-full justify-between lg:w-auto">
      <a href="/" class="flex items-center space-x-2">
        <Image src={Logo} alt="Logo" width="50" height="50" />
      </a>
      <div class="block lg:hidden">
        <ThemeToggle id="not-desktop" />
        <MenuIcon class="h-5 w-5 text-gray-800" />
      </div>
    </div>
    <MenuItems class="hidden lg:flex">
      <ul class="flex flex-col lg:flex-row lg:gap-5">
        <li class="my-2">
          <a href="/">Home</a>
        </li>
        <li class="my-2">
          <a href="gh-stats">Github Stats</a>
        </li>
        {
          session && 
            <li class="my-2">
              <a href="protected">Protected</a>
            </li>
        }
        <li>
          <div class="hidden lg:flex">
            <ThemeToggle id="desktop" />
          </div>
        </li>
        <li>
          <Auth>
            {
              (session: Session) => {
                if (session) {
                  return (
                    <>
                      <p>Logged in as {session.user?.name}</p>
                      <SignOut>Sign Out</SignOut>
                    </>
                  )
                } else {
                  return <SignIn provider="github">Sign In</SignIn>
                }
              }
            }
          </Auth>
        </li>
      </ul>
    </MenuItems>
  </Astronav>
</header>
