name: Astro publish to Cloudflare pages

on: [push]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    name: Publish to Cloudflare Pages
    steps:
      # - name: Print ENV
      #   env:
      #     AUTH_SECRET: ${{vars.AUTH_SECRET}}
      #     AUTH_TRUST_HOST: ${{vars.AUTH_TRUST_HOST}}
      #   run: |
      #     echo $AUTH_SECRET
      #     echo $AUTH_TRUST_HOST
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Install, build, and upload your site output
      #   uses: withastro/action@v1
      #   env:
      #     AUTH_SECRET: ${{ vars.AUTH_SECRET }}
      #     AUTH_TRUST_HOST: ${{ vars.AUTH_TRUST_HOST }}
      #   with:
      #     node-version: 20

      - name: Install Bun
        uses: oven-sh/setup-bun@v1

      # - uses: actions/cache@v3
      #   name: Setup bun cache
      #   with:
      #     path: ${{ env.STORE_PATH }}
      #     key: ${{ runner.os }}-bun-store-${{ hashFiles('**/bun.lockb') }}
      #     restore-keys: |
      #       ${{ runner.os }}-bun-store-

      - name: Install Packages
        run: bun i

      - name: create .env
        env:
          env:
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          AUTH_TRUST_HOST: ${{ vars.AUTH_TRUST_HOST }}
          AUTHENTIK_ISSUER: ${{ vars.AUTHENTIK_ISSUER  }}
          AUTHENTIK_CLIENT_ID: ${{ vars.AUTHENTIK_CLIENT_ID  }}
          AUTHENTIK_CLIENT_SECRET: ${{ secrets.AUTHENTIK_CLIENT_SECRET   }}
        run: |
          touch .env
          echo "export AUTH_TRUST_HOST=$AUTH_SECRET" >> .env
          echo "export AUTH_SECRET=$AUTH_TRUST_HOST" >> .env
          echo "export AUTHENTIK_ISSUER=$AUTHENTIK_ISSUER" >> .env
          echo "export AUTHENTIK_CLIENT_ID=$AUTHENTIK_CLIENT_ID" >> .env
          echo "export AUTHENTIK_CLIENT_SECRET=$AUTHENTIK_CLIENT_SECRET" >>  .env

      - name: Build Site
        run: |
          bun run build

      # Run a build step here if your project requires

      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ vars.CLOUDFLARE_ACCOUNT_ID  }}
          projectName: homepage
          directory: dist
          # Optional: Enable this if you want to have GitHub Deployments triggered
          # gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          # Optional: Switch what branch you are publishing to.
          # By default this will be the branch which triggered this workflow
          # branch: main
          # Optional: Change the working directory
          # workingDirectory: my-site
          # Optional: Change the Wrangler version, allows you to point to a specific version or a tag such as `beta`
          # wranglerVersion: '3'
# name: Astro Studio

# env:
#   ASTRO_STUDIO_APP_TOKEN: ${{secrets.ASTRO_STUDIO_APP_TOKEN }}

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     types: [opened, reopened, synchronize]

# jobs:
#   DB:
#     permissions:
#       contents: read
#       actions: read
#       pull-requests: write
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       # - uses: actions/setup-node@v4
#       #   with:
#       #     node-version: 20
#       # - uses: jaid/action-npm-install@v1.2.1
#       # - uses: withastro/action-studio@main
#       - name: Echo
#         run: echo "Hello Studio"
